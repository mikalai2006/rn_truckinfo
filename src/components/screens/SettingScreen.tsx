import React from 'react';
import {View, Text, Button, NativeModules, Platform} from 'react-native';
// import WebviewBlok from '../WebviewBlok';
import PushNotification from 'react-native-push-notification';

const SettingScreen = ({}) => {
    const testPush = () => {
        PushNotification.localNotification({
            channelId: 'test',
            // bigPictureUrl: 'https://placehold.co/600x400.png',
            //picture: 'https://clipart-library.com/image_gallery/n839804.png',
            /* Android Only Properties */
            id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: 'My Notification Ticker', // (optional)
            autoCancel: true, // (optional) default: true
            // largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
            // smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: 'My big text that will be shown when notification is expanded', // (optional) default: "message" prop
            subText: 'This is a subText', // (optional) default: none
            color: 'red', // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: 'group', // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification
            title: 'My Notification Title', // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
            message: 'My Notification Message', // (required)
        });
    };
    const testShedule = () => {
        PushNotification.localNotificationSchedule({
            id: 1,
            message: `Reminder Message`,
            date: new Date(Date.now() + 60 * 1000),
            repeatType: 'day',
            // repeatTime:
            allowWhileIdle: false,
            exact: true,
        });
    };
    const deviceLanguage =
        Platform.OS === 'ios'
            ? NativeModules.SettingsManager.settings.AppleLocale ||
              NativeModules.SettingsManager.settings.AppleLanguages[0] //iOS 13
            : NativeModules.I18nManager.localeIdentifier;

    return (
        <View className="h-full">
            <Text>SettingScreen {deviceLanguage}</Text>
            <Button title="Test push" onPress={() => testPush()} />
            <Button title="Test shedule" onPress={() => testShedule()} />
            {/* <WebviewBlok
        source={{
          uri: 'http://localhost:1111/setting',
        }}
      /> */}
        </View>
    );
};

export default SettingScreen;
